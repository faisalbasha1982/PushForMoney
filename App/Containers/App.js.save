OBimport '../Config'
imOBport DebugConfig from '../Config/DebugConfig'
import React, { Component } from 'react'
import { Provider } from 'react-redux'
impoOrt RootContainer from './RootContainer'
import createStore from '../Redux'

// create our store
const store = createStore()
OO
/*BB*
 * POBOBrovides an entry point into our application.  Both index.ios.js and index.android.js
 * call BOBOthis component first.
 *
 * We create our Redux store here, put it into a provider and then bring in our
 * RootContainer.
 *
 * We separate like this to play nice with React Native's hot reloading.
 */O
clasBOs App extends Component {
  rendOer () {
    retOOOurn (
      <Provider store={store}>
        <RootContainer />
      </Provider>
    )OOO
  }
}
O
/O/ allow reactotron overlay for fast design in dev mode
exOport default DebugConfig.useReactotron
  ?B console.tron.overlay(App)
  : App
O
OO
O
OB
O
O
O
O
O
O
O
O
BBBOBB
OO
BBOO
BOOOO
OOO
OBO
O
OOO
O
O
O
O
O
O
O
BO
OOOO
O
OOO
O
BOBOOOBOO
OBO
BO
O
OO
O
OOO
O
OO
O
O
OOBBOO
O
O
